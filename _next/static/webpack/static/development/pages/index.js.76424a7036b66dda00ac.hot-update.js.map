{"version":3,"file":"static/webpack/static/development/pages/index.js.76424a7036b66dda00ac.hot-update.js","sources":["webpack:///./components/shared/header.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport Link from 'next/link';\nimport { colors, Anchor } from './typography';\n\nconst LINKS = [\n    {\n        title: 'Snippets',\n        href: '/snippets'\n    },\n    {\n        title: 'Readings',\n        href: '/readings'\n    }\n];\nconst HeaderLink = styled(Anchor)({\n    display: 'inline-block',\n    padding: '10px',\n    borderRadius: '5px'\n});\nconst SectionLink = styled(HeaderLink)(({ isSelected = false }) => {\n    const styles = {\n        transition: 'all 0.3s ease-in-out 0s',\n        marginLeft: '10px',\n        opacity: '0.8',\n        background: 'none',\n        ':first-of-type': {\n            marginLeft: '0'\n        },\n        ':hover': {\n            opacity: '0.9'\n        }\n    }\n    if (isSelected) {\n        styles.backgroundColor = colors.coolpurple;\n        styles.color = colors.lightgray;\n        styles.color[':hover'].color = colors.lightgray;\n    }\n    return styles;\n});\n\nconst HomeLink = styled(HeaderLink)({\n    fontSize: '18px',\n    opacity: 1,\n    fontWeight: 'bold',\n    ':hover': {\n        opacity: 1\n    }\n});\n\nconst HeaderContainer = styled.header(({ dark }) => ({\n    width: '100%',\n    padding: '30px 0px 0px',\n    flexShrink: 0,\n    zIndex: '10',\n    position: 'absolute',\n    top: '0px',\n    color: dark ? colors.coolpurple : colors.lightgray\n}));\n\nconst Navigation = styled.nav({\n    display: 'flex',\n    justifyContent: 'space-between'\n});\n\nconst NavigationAlignment = styled.div({\n    width: '100%',\n    maxWidth: '800px',\n    margin: '0px auto'\n});\n\nconst Header = ({ currentPageHref, dark, ...otherProps }) => (\n    <HeaderContainer {...otherProps}>\n        <NavigationAlignment>\n            <Navigation>\n                <div>\n                    <Link href=\"/\" passHref>\n                        <HomeLink {...{ dark }}>Pat Smith</HomeLink>\n                    </Link>\n                </div>\n                <div>\n                    {LINKS.map(({ title, href }) => (\n                        <Link key={title} href={href} passHref>\n                            <SectionLink {...{ dark, isSelected: currentPageHref === href }}>{title}</SectionLink>\n                        </Link>\n                    ))}\n                </div>\n            </Navigation>\n        </NavigationAlignment>\n    </HeaderContainer>\n);\nHeader.propTypes = {\n    currentPageHref: PropTypes.string.isRequired,\n    dark: PropTypes.bool\n};\nHeader.defaultProps = {\n    dark: false\n};\nHeader.displayName = 'Header';\nexport default Header;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AARA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAUA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAVA;AACA;AAmBA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;;;;A","sourceRoot":""}