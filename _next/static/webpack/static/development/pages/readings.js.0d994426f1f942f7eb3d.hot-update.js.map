{"version":3,"file":"static/webpack/static/development/pages/readings.js.0d994426f1f942f7eb3d.hot-update.js","sources":["webpack:///./pages/readings.jsx"],"sourcesContent":["import React from 'react';\nimport Head from 'next/head';\nimport Header from '../components/shared/header';\nimport { colors } from '../components/shared/typography';\nimport styled from '@emotion/styled';\nimport ReadingBrick from '../components/snippets/reading-brick';\n\nconst READING_LINKS = [\n    {\n        title: 'Blogs',\n        links: [{\n            linkTitle: 'Overreacted',\n            description: 'Dan Abramov is a master of explaining React in a way that strikes a balance between accessible and \"in the weeds\".',\n            link: {\n                title: 'Visit',\n                href: 'https://overreacted.io/'\n            }\n        }, {\n            linkTitle: 'Kent C Dodds',\n            description: 'Kent C Dodds (The Doddfather) walks through some great patterns for building customer hooks that create simple and clean components.',\n            link: {\n                title: 'Visit',\n                href: 'https://kentcdodds.com/blog/'\n            }\n        }]\n    },\n    {\n        title: 'React',\n        links: [{\n            linkTitle: 'A Complete Guide to useEffect',\n            description: 'Dan Abramov walks gives an in depth guide of how to use useEffect. This article was very important for me recognizing how to properly use hooks.',\n            link: {\n                title: 'Read Article',\n                href: 'https://overreacted.io/a-complete-guide-to-useeffect/'\n            }\n        }, {\n            linkTitle: 'The State Reducer Pattern with React Hooks',\n            description: 'Kent C Dodds (The Doddfather) walks through some great patterns for building customer hooks that create simple and clean components.',\n            link: {\n                title: 'Read Article',\n                href: 'https://overreacted.io/a-complete-guide-to-useeffect/'\n            }\n        }]\n    }\n];\n\nconst SnippetHolder = styled.div({\n    margin: '30px auto',\n    maxWidth: '800px'\n});\nconst SectionHeader = styled.section({\n    height: '100px',\n    backgroundColor: colors.prettypink\n});\nconst Readings = () => (\n    <>\n        <Head>\n            <title>Readings</title>\n        </Head>\n        <SectionHeader>\n            <Header currentPageHref=\"/readings\" />\n        </SectionHeader>\n        <SnippetHolder>\n            <h1>Readings</h1>\n            <p>Here's a collection of readings that I've found that I personally have found useful.</p>\n            {READING_LINKS.map(({ title, links }, index) => (\n                <ReadingBrick key={index} {...{ title, links }} />\n            ))}\n        </SnippetHolder>\n    </>\n);\nReadings.displayName = 'Readings';\nexport default Readings;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAQA;AACA;AACA;AACA;AACA;AAFA;AAHA;AATA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAQA;AACA;AACA;AACA;AACA;AAFA;AAHA;AATA;AAoBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAXA;AACA;AAgBA;AACA;;;;A","sourceRoot":""}